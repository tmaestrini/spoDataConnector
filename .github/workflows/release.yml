########################################################
### Basic SharePoint Framework Build Pipeline (SPFx) ###
########################################################

name: "Basic SharePoint Framework Build Pipeline (SPFx)"

permissions:
  contents: write
  packages: write

on:
  push:
    tags:
      - "v*"  # Triggers on any tag starting with 'v'
  workflow_dispatch:

jobs:
  spfx-build:
    if: github.ref == 'refs/heads/main'  # Only run if push was on main branch
    name: "SPFx Build solution"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 18.x

      - name: Install node packages
        run: npm install

      - name: Install Gulp (globally)
        run: npm install -g gulp

      - name: build solution
        run: gulp build

      - name: create solution package (.sppkg)
        run: |
          gulp bundle --ship
          gulp package-solution --ship

      - name: Read Solution Version
        run: |
          SOLUTION_VERSION=$(jq -r '.solution.version' ./config/package-solution.json)
          echo "SOLUTION_VERSION=${SOLUTION_VERSION}" >> $GITHUB_ENV

      - name: Set Release Name
        run: echo "RELEASE_NAME=$(date +'%Y%m')${GITHUB_RUN_NUMBER}-${SOLUTION_VERSION}" >> $GITHUB_ENV

      - name: Publish release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # tag_name: "${{ github.sha }}"
          tag_name: ${{ env.RELEASE_NAME }}
          release_name: ${{ env.RELEASE_NAME }}
          body: "Release ${{ env.SOLUTION_VERSION }}"
          draft: false
          prerelease: false

      - name: Find SPPKG file
        run: |
          SPPKG_PATH=$(find ./sharepoint/solution -name "*.sppkg" -type f)
          echo "SPPKG_PATH=${SPPKG_PATH}" >> $GITHUB_ENV

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.SPPKG_PATH }}
          asset_name: solution.sppkg
          asset_content_type: application/zip
